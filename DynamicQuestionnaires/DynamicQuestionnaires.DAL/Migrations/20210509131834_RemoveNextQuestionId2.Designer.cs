// <auto-generated />
using System;
using DynamicQuestionnaires.DAL.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DynamicQuestionnaires.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210509131834_RemoveNextQuestionId2")]
    partial class RemoveNextQuestionId2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DynamicQuestionnaires.Infrastruture.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NextQuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("NextQuestionId1")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NextQuestionId1");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("DynamicQuestionnaires.Infrastruture.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("DynamicQuestionnaires.Infrastruture.Entities.Questionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StartQuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StartQuestionId");

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("DynamicQuestionnaires.Infrastruture.Entities.Answer", b =>
                {
                    b.HasOne("DynamicQuestionnaires.Infrastruture.Entities.Question", "NextQuestion")
                        .WithMany()
                        .HasForeignKey("NextQuestionId1");

                    b.HasOne("DynamicQuestionnaires.Infrastruture.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NextQuestion");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("DynamicQuestionnaires.Infrastruture.Entities.Questionnaire", b =>
                {
                    b.HasOne("DynamicQuestionnaires.Infrastruture.Entities.Question", "StartQuestion")
                        .WithMany()
                        .HasForeignKey("StartQuestionId");

                    b.Navigation("StartQuestion");
                });

            modelBuilder.Entity("DynamicQuestionnaires.Infrastruture.Entities.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
